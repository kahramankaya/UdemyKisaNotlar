# örnek teorisi uygulama:
import numpy as np
populasyon=np.random.randint(0,80,1000) # 0 ile 80 yaş arası 1000 seç.
print(populasyon[0:10]) # ilk 10 tanesini yazdırdım.
orneklem=np.random.choice(a=populasyon, size=100) #populasyondan rasgele 100 kişi seç.
print(orneklem.mean())
print(populasyon.mean()) # bu iki satırdan şu anlaşılıyor: orneklem ve populasyon ortalaması birbirine ne kadar yakın olduğunu görmüş olduk.





# betimsel istatistik uygulama:
import seaborn as sns
tips=sns.load_dataset("tips")
df=tips.copy()
print(df.head())

!pip install researchpy # bu sayede kütüphanemizi indirdik.
import researchpy as rp
rp.summary_cont(df[["total_bill","tip","size"]]) # summary_cont sayısal değişken seçmek için kullanılır.
rp.summary_cat(df[["sex","smoker","time"]])

print(df[["total_bill","tip"]].cov()) # bu sayede koveryans bilgisi geldi.
print(df[["total_bill","tip"]].corr()) # bu şekilde de korelasyona bakmış olduk. her ikisi arasında 0.67 lik pozitif bir ilişki var demek ki.


# güven aralıkları
import numpy as np
fiyatlar=np.random.randint(1,100,1000) # 1 ile 100 tl arasında fiyatı belirlemek için 1000 müşteriye baktığımızı varsayalım.
import statsmodels.stats.api as sms
print(sms.DescrStatsW(fiyatlar).tconfint_mean()) # demek ki 1000 kişi yüzde 95 ihtimalle çıkan bu iki değer arasında ürüne fiyat biçmiş.







# olasılık dağılımları:
# bernoulli dağılımı:
from scipy.stats import bernoulli
p=0.8
rv=bernoulli(p)
print(rv.pmf(k=0)) # k=0 ise paranın yazı gelme k=1 ise tura gelme olasılığını hesapla demiş oluyoruz.







#??????????????????????????????????????????????????????????
# büyük sayılar yasası anlaşılmadı. mustafa vahit video  187
#??????????????????????????????????????????????????????????







# binom dağılımı
from scipy.stats import binom
p=0.01
n=100
rv=binom(n,p)
print(rv.pmf(1)) # 100 kişiden 1 kişinin tıklama olasılığı
print(rv.pmf(5)) # 100 kişiden 5 kişinin tıklama olasılığı
print(rv.pmf(10)) # 100 kişiden 10 kişinin tıklama olasılığı


# 190. videodayım.
